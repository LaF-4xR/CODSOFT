import kagglehub
import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

path = kagglehub.dataset_download("hijest/genre-classification-dataset-imdb")
dataset_folder = os.path.join(path, "Genre Classification Dataset")

with open(os.path.join(dataset_folder, "description.txt"), 'r') as file:
    print(file.read())

with open(os.path.join(dataset_folder, "train_data.txt"), 'r') as file:
    for _ in range(5):
        print(file.readline())

train_file = os.path.join(dataset_folder, "train_data.txt")
solution_file = os.path.join(dataset_folder, "test_data_solution.txt")

df_train = pd.read_csv(train_file, sep=":::", engine='python', header=None, names=["ID", "TITLE", "GENRE", "DESCRIPTION"])
df_test = pd.read_csv(solution_file, sep=":::", engine='python', header=None, names=["ID", "TITLE", "GENRE", "DESCRIPTION"])

print(df_train.head())
print(df_test.head())

plt.figure(figsize=(10,5))
sns.countplot(data=df_train, y='GENRE', order=df_train['GENRE'].value_counts().index)
plt.title("Genre Distribution in Training Data")
plt.xlabel("Count")
plt.ylabel("Genre")
plt.tight_layout()
plt.show()

vectorizer = TfidfVectorizer(max_features=5000, stop_words='english')
X_train = vectorizer.fit_transform(df_train['DESCRIPTION'])
X_test = vectorizer.transform(df_test['DESCRIPTION'])

y_train = df_train['GENRE']
y_test = df_test['GENRE']

model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("Classification Report:\n")
print(classification_report(y_test, y_pred, zero_division=0))
print(f"Model Accuracy : {accuracy_score(y_test, y_pred):.4f}")

new_description = ["Ravi slipped on a banana peel in front of his crush, spun mid-air, and accidentally landed in a breakdance pose. The crowd went wild. “That spin was sick!” someone yelled. He became the school’s dance captain the next day. He still can’t dance but now he fears fruit more than failure."]

new_vector = vectorizer.transform(new_description)
genre_predictor = model.predict(new_vector)

print("Predicted Genre:", genre_predictor[0])
